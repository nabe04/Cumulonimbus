//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBTranslation
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   row_major float4x4 boneTransforms[128];// Offset:   64 Size:  8192
//   row_major float4x4 transform_matrix;// Offset: 8256 Size:    64 [unused]
//
// }
//
// cbuffer CBLight
// {
//
//   float4 light_position;             // Offset:    0 Size:    16 [unused]
//   float4 light_direction;            // Offset:   16 Size:    16 [unused]
//   float4 light_ambient;              // Offset:   32 Size:    16 [unused]
//   float4 light_color;                // Offset:   48 Size:    16 [unused]
//   row_major float4x4 light_view_matrix;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 light_perspective_projection_matrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 light_perspective_view_projection_matrix;// Offset:  192 Size:    64 [unused]
//   float light_orthographic_view_width;// Offset:  256 Size:     4 [unused]
//   float light_orthographic_view_height;// Offset:  260 Size:     4 [unused]
//   float light_orthographic_near_z;   // Offset:  264 Size:     4 [unused]
//   float light_orthographic_far_z;    // Offset:  268 Size:     4 [unused]
//   row_major float4x4 light_orthographic_projection_matrix;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 light_orthographic_view_projection_matrix;// Offset:  336 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBTranslation                     cbuffer      NA          NA            cb0      1 
// CBLight                           cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// WEIGHTS                  0   xyzw        2     NONE   float   xyzw
// BONES                    0   xyzw        3     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// NDC_POSITION             0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer CB0[516], dynamicIndexed
dcl_constantbuffer CB2[25], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; 
//   v2.x <- vin.boneWeights.x; v2.y <- vin.boneWeights.y; v2.z <- vin.boneWeights.z; v2.w <- vin.boneWeights.w; 
//   v3.x <- vin.boneIndices.x; v3.y <- vin.boneIndices.y; v3.z <- vin.boneIndices.z; v3.w <- vin.boneIndices.w; 
//   o1.x <- <main return value>.ndc_position.x; o1.y <- <main return value>.ndc_position.y; o1.z <- <main return value>.ndc_position.z; o1.w <- <main return value>.ndc_position.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 17 "C:\Users\ryoki\Desktop\Cumlonimbus\Shader\normal_shadow_depth_extraction_vs.hlsl"
itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- world_pos.x; r0.y <- world_pos.y; r0.z <- world_pos.z

#line 19
mov r0.w, l(0)  // r0.w <- i
mov r1.xyz, r0.xyzx  // r1.x <- world_pos.x; r1.y <- world_pos.y; r1.z <- world_pos.z
mov r1.w, r0.w  // r1.w <- i
loop 
  ilt r2.x, r1.w, l(4)
  breakc_z r2.x

#line 24
  dp4 r2.x, v2.xyzw, icb[r1.w + 0].xyzw
  and r3.xyzw, v3.xyzw, icb[r1.w + 4].xyzw
  or r2.yz, r3.yywy, r3.xxzx
  or r2.y, r2.z, r2.y
  imul null, r2.y, r2.y, l(4)
  mul r3.xyz, v0.xxxx, cb0[r2.y + 4].xyzx
  mul r4.xyz, v0.yyyy, cb0[r2.y + 5].xyzx
  add r3.xyz, r3.xyzx, r4.xyzx
  mul r4.xyz, v0.zzzz, cb0[r2.y + 6].xyzx
  add r3.xyz, r3.xyzx, r4.xyzx
  mul r2.yzw, v0.wwww, cb0[r2.y + 7].xxyz
  add r2.yzw, r2.yyzw, r3.xxyz
  mul r2.xyz, r2.yzwy, r2.xxxx
  add r1.xyz, r1.xyzx, r2.xyzx

#line 26
  iadd r1.w, r1.w, l(1)
endloop 

#line 27
mul r0.xyzw, r1.xxxx, cb2[21].xyzw
mul r2.xyzw, r1.yyyy, cb2[22].xyzw
add r0.xyzw, r0.xyzw, r2.xyzw
mul r1.xyzw, r1.zzzz, cb2[23].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb2[24].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- wvp_pos.x; r0.y <- wvp_pos.y; r0.z <- wvp_pos.z; r0.w <- wvp_pos.w

#line 29
mov r0.xyzw, r0.xyzw  // r0.x <- vs_out.position.x; r0.y <- vs_out.position.y; r0.z <- vs_out.position.z; r0.w <- vs_out.position.w

#line 30
mov r0.xyzw, r0.xyzw  // r0.x <- vs_out.ndc_position.x; r0.y <- vs_out.ndc_position.y; r0.z <- vs_out.ndc_position.z; r0.w <- vs_out.ndc_position.w

#line 32
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r0.xyzw
ret 
// Approximately 35 instruction slots used
