//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// default_sampler                   sampler      NA          NA             s0      1 
// texture_base_color                texture  float4          2d            t20      1 
// texture_normal                    texture  float4          2d            t21      1 
// texture_position                  texture  float4          2d            t30      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t30
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord0.x; v1.y <- pin.texcoord0.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 19 "D:\Desktop\Cumulonimbus\Shader\sample_shader_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t20.xyzw, s0  // r0.x <- albedo_color.x; r0.y <- albedo_color.y; r0.z <- albedo_color.z; r0.w <- albedo_color.w

#line 20
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t21.xyzw, s0  // r1.x <- normal_map.x; r1.y <- normal_map.y; r1.z <- normal_map.z; r1.w <- normal_map.w

#line 21
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t30.xyzw, s0  // r2.x <- position_map.x; r2.y <- position_map.y; r2.z <- position_map.z; r2.w <- position_map.w

#line 25
add r0.xyzw, r0.xyzw, r1.xyzw
add o0.xyzw, r2.xyzw, r0.xyzw
ret 
// Approximately 6 instruction slots used
