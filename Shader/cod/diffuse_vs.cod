//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CameraCB
// {
//
//   float4x4 camera_view_matrix;       // Offset:    0 Size:    64 [unused]
//   float4x4 camera_projection_matrix; // Offset:   64 Size:    64 [unused]
//   float4x4 camera_view_projection_matrix;// Offset:  128 Size:    64
//   float3 camera_position;            // Offset:  192 Size:    12 [unused]
//   float camera_distance_from_origin; // Offset:  204 Size:     4 [unused]
//   float3 camera_at;                  // Offset:  208 Size:    12 [unused]
//   float camera_near_z;               // Offset:  220 Size:     4 [unused]
//   float3 camera_up;                  // Offset:  224 Size:    12 [unused]
//   float camera_far_z;                // Offset:  236 Size:     4 [unused]
//   float3 camera_right;               // Offset:  240 Size:    12 [unused]
//   float camera_fov;                  // Offset:  252 Size:     4 [unused]
//   float3 camera_front;               // Offset:  256 Size:    12 [unused]
//   float camera_aspect;               // Offset:  268 Size:     4 [unused]
//   float camera_width;                // Offset:  272 Size:     4 [unused]
//   float camera_height;               // Offset:  276 Size:     4 [unused]
//   float2 camera_padding;             // Offset:  280 Size:     8 [unused]
//
// }
//
// cbuffer LightCB
// {
//
//   float3 light_position;             // Offset:    0 Size:    12 [unused]
//   float orthographic_view_width;     // Offset:   12 Size:     4 [unused]
//   float3 light_direction;            // Offset:   16 Size:    12 [unused]
//   float orthographic_view_height;    // Offset:   28 Size:     4 [unused]
//   float3 light_color;                // Offset:   32 Size:    12 [unused]
//   float orthographic_near_z;         // Offset:   44 Size:     4 [unused]
//   float orthographic_far_z;          // Offset:   48 Size:     4 [unused]
//   float3 light_padding;              // Offset:   52 Size:    12 [unused]
//   float4x4 light_view_matrix;        // Offset:   64 Size:    64 [unused]
//   float4x4 light_perspective_projection_matrix;// Offset:  128 Size:    64 [unused]
//   float4x4 light_perspective_view_projection_matrix;// Offset:  192 Size:    64 [unused]
//   float4x4 light_orthographic_projection_matrix;// Offset:  256 Size:    64 [unused]
//   float4x4 light_orthographic_view_projection_matrix;// Offset:  320 Size:    64
//
// }
//
// cbuffer TransformCB
// {
//
//   float4x4 bone_transforms[128];     // Offset:    0 Size:  8192
//   float4x4 transform_matrix;         // Offset: 8192 Size:    64 [unused]
//   float4x4 scaling_matrix;           // Offset: 8256 Size:    64 [unused]
//   float4x4 rotation_matrix;          // Offset: 8320 Size:    64 [unused]
//   float4x4 translation_matrix;       // Offset: 8384 Size:    64 [unused]
//
// }
//
// cbuffer MaterialCB
// {
//
//   struct ShaderMaterial
//   {
//       
//       float4 base_color;             // Offset:    0
//       float4 emissive_color;         // Offset:   16
//       float roughness;               // Offset:   32
//       float reflectance;             // Offset:   36
//       float metalness;               // Offset:   40
//       int material_use_custom;       // Offset:   44
//
//   } material;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CameraCB                          cbuffer      NA          NA            cb1      1 
// LightCB                           cbuffer      NA          NA            cb2      1 
// TransformCB                       cbuffer      NA          NA            cb3      1 
// MaterialCB                        cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// WEIGHTS                  0   xyzw        3     NONE   float   xyzw
// BONES                    0   xyzw        4     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// W_POSITION               0   xyzw        1     NONE   float   xyzw
// WVP_POSITION             0   xyzw        2     NONE   float   xyzw
// NORMAL                   0   xyz         3     NONE   float   xyz 
// TANGENT                  0   xyz         4     NONE   float   xyz 
// BI_NORMAL                0   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEX_POSITION             0   xyz         7     NONE   float   xyz 
// TEXCOORD                 0   xy          8     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[12], immediateIndexed
dcl_constantbuffer CB2[24], immediateIndexed
dcl_constantbuffer CB3[512], dynamicIndexed
dcl_constantbuffer CB4[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyz
dcl_output o8.xy
dcl_temps 4
ishl r0.xyzw, v4.xyzw, l(2, 2, 2, 2)
mul r1.xyz, v0.yyyy, cb3[r0.y + 1].xyzx
mad r1.xyz, cb3[r0.y + 0].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb3[r0.y + 2].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb3[r0.y + 3].xyzx, v0.wwww, r1.xyzx
mul r1.xyz, r1.xyzx, v3.yyyy
mul r2.xyz, v0.yyyy, cb3[r0.x + 1].xyzx
mad r2.xyz, cb3[r0.x + 0].xyzx, v0.xxxx, r2.xyzx
mad r2.xyz, cb3[r0.x + 2].xyzx, v0.zzzz, r2.xyzx
mad r2.xyz, cb3[r0.x + 3].xyzx, v0.wwww, r2.xyzx
mad r1.xyz, v3.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb3[r0.z + 1].xyzx
mad r2.xyz, cb3[r0.z + 0].xyzx, v0.xxxx, r2.xyzx
mad r2.xyz, cb3[r0.z + 2].xyzx, v0.zzzz, r2.xyzx
mad r2.xyz, cb3[r0.z + 3].xyzx, v0.wwww, r2.xyzx
mad r1.xyz, v3.zzzz, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb3[r0.w + 1].xyzx
mad r2.xyz, cb3[r0.w + 0].xyzx, v0.xxxx, r2.xyzx
mad r2.xyz, cb3[r0.w + 2].xyzx, v0.zzzz, r2.xyzx
mad r2.xyz, cb3[r0.w + 3].xyzx, v0.wwww, r2.xyzx
mad r1.xyz, v3.wwww, r2.xyzx, r1.xyzx
mul r2.xyzw, r1.yyyy, cb1[9].xyzw
mad r2.xyzw, cb1[8].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb1[10].xyzw, r1.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb1[11].xyzw
mov o0.xyzw, r2.xyzw
mov o2.xyzw, r2.xyzw
mov o1.w, l(1.000000)
mov o1.xyz, r1.xyzx
mul r2.xyz, v1.yyyy, cb3[r0.y + 1].zxyz
mad r2.xyz, cb3[r0.y + 0].zxyz, v1.xxxx, r2.xyzx
mad r2.xyz, cb3[r0.y + 2].zxyz, v1.zzzz, r2.xyzx
mul r2.xyz, r2.xyzx, v3.yyyy
mul r3.xyz, v1.yyyy, cb3[r0.x + 1].zxyz
mad r3.xyz, cb3[r0.x + 0].zxyz, v1.xxxx, r3.xyzx
mad r3.xyz, cb3[r0.x + 2].zxyz, v1.zzzz, r3.xyzx
mad r2.xyz, v3.xxxx, r3.xyzx, r2.xyzx
mul r3.xyz, v1.yyyy, cb3[r0.z + 1].zxyz
mad r3.xyz, cb3[r0.z + 0].zxyz, v1.xxxx, r3.xyzx
mad r0.xyz, cb3[r0.z + 2].zxyz, v1.zzzz, r3.xyzx
mad r0.xyz, v3.zzzz, r0.xyzx, r2.xyzx
mul r2.xyz, v1.yyyy, cb3[r0.w + 1].zxyz
mad r2.xyz, cb3[r0.w + 0].zxyz, v1.xxxx, r2.xyzx
mad r2.xyz, cb3[r0.w + 2].zxyz, v1.zzzz, r2.xyzx
mad r0.xyz, v3.wwww, r2.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o3.xyz, r0.wwww, r0.yzxy
mul r2.xyz, r0.zxyz, l(0.001000, 0.000000, 1.000000, 0.000000)
mad r2.xyz, r0.xyzx, l(1.000000, 0.001000, 0.000000, 0.000000), -r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mov o4.xyz, r2.xyzx
mul r3.xyz, r0.xyzx, r2.yzxy
mad r0.xyz, r0.zxyz, r2.zxyz, -r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o5.xyz, r0.wwww, r0.xyzx
mov o6.xyzw, cb4[0].xyzw
mul r0.xyzw, r1.yyyy, cb2[21].xyzw
mad r0.xyzw, cb2[20].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb2[22].xyzw, r1.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[23].xyzw
div r0.xyz, r0.xyzx, r0.wwww
mad o7.xyz, r0.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mov o8.xy, v2.xyxx
ret 
// Approximately 68 instruction slots used
