//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   o2.x <- <main return value>.position.x; o2.y <- <main return value>.position.y; o2.z <- <main return value>.position.z; o2.w <- <main return value>.position.w; 
//   o1.x <- <main return value>.normal.x; o1.y <- <main return value>.normal.y; o1.z <- <main return value>.normal.z; o1.w <- <main return value>.normal.w; 
//   o0.x <- <main return value>.color.x; o0.y <- <main return value>.color.y; o0.z <- <main return value>.color.z; o0.w <- <main return value>.color.w
//
#line 16 "D:\Desktop\Cumulonimbus\Shader\debug_collision_ps.hlsl"
itof r0.xyzw, l(0, 0, 0, 0)  // r0.x <- pout.normal.x; r0.y <- pout.normal.y; r0.z <- pout.normal.z; r0.w <- pout.normal.w
itof r1.xyzw, l(0, 0, 0, 0)  // r1.x <- pout.position.x; r1.y <- pout.position.y; r1.z <- pout.position.z; r1.w <- pout.position.w

#line 18
itof r2.xyzw, l(1, 1, 1, 1)  // r2.x <- pout.color.x; r2.y <- pout.color.y; r2.z <- pout.color.z; r2.w <- pout.color.w

#line 19
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xyzw, r1.xyzw
ret 
// Approximately 7 instruction slots used
