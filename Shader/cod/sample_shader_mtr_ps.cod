//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// default_sampler                   sampler      NA          NA             s0      1 
// texture_base_color                texture  float4          2d            t20      1 
// texture_normal                    texture  float4          2d            t21      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// W_POSITION               0   xyzw        1     NONE   float   xyzw
// WVP_POSITION             0   xyzw        2     NONE   float       
// NORMAL                   0   xyz         3     NONE   float   xyz 
// TANGENT                  0   xyz         4     NONE   float   xyz 
// BI_NORMAL                0   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float       
// TEX_POSITION             0   xyz         7     NONE   float       
// TEXCOORD                 0   xy          8     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v8.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.w_position.x; v1.y <- pin.w_position.y; v1.z <- pin.w_position.z; v1.w <- pin.w_position.w; 
//   v2.x <- pin.wvp_position.x; v2.y <- pin.wvp_position.y; v2.z <- pin.wvp_position.z; v2.w <- pin.wvp_position.w; 
//   v3.x <- pin.normal.x; v3.y <- pin.normal.y; v3.z <- pin.normal.z; 
//   v4.x <- pin.tangent.x; v4.y <- pin.tangent.y; v4.z <- pin.tangent.z; 
//   v5.x <- pin.binormal.x; v5.y <- pin.binormal.y; v5.z <- pin.binormal.z; 
//   v6.x <- pin.color.x; v6.y <- pin.color.y; v6.z <- pin.color.z; v6.w <- pin.color.w; 
//   v7.x <- pin.tex_position.x; v7.y <- pin.tex_position.y; v7.z <- pin.tex_position.z; 
//   v8.x <- pin.texcoord0.x; v8.y <- pin.texcoord0.y; 
//   o2.x <- <main return value>.mro.x; o2.y <- <main return value>.mro.y; o2.z <- <main return value>.mro.z; o2.w <- <main return value>.mro.w; 
//   o1.x <- <main return value>.normal.x; o1.y <- <main return value>.normal.y; o1.z <- <main return value>.normal.z; o1.w <- <main return value>.normal.w; 
//   o0.x <- <main return value>.color.x; o0.y <- <main return value>.color.y; o0.z <- <main return value>.color.z; o0.w <- <main return value>.color.w
//
#line 22 "D:\Desktop\Cumulonimbus\Shader\sample_shader_mtr_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v8.xyxx, t20.xyzw, s0  // r0.x <- albedo_color.x; r0.y <- albedo_color.y; r0.z <- albedo_color.z; r0.w <- albedo_color.w

#line 24
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v8.xyxx, t21.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- normal_map.x; r1.y <- normal_map.y; r1.z <- normal_map.z

#line 25
nop 
mov r1.xyz, r1.xyzx

#line 103 "D:\Desktop\Cumulonimbus\Shader\functions_utility.hlsli"
dp3 r1.w, v4.xyzx, v4.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v4.xyzx  // r2.x <- vx.x; r2.y <- vx.y; r2.z <- vx.z

#line 104
dp3 r1.w, v5.xyzx, v5.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v5.xyzx  // r3.x <- vy.x; r3.y <- vy.y; r3.z <- vy.z

#line 105
dp3 r1.w, v3.xyzx, v3.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, v3.xyzx  // r4.x <- vz.x; r4.y <- vz.y; r4.z <- vz.z

#line 108
mov r5.x, r2.x  // r5.x <- mat._m00
mov r5.y, r3.x  // r5.y <- mat._m10
mov r5.z, r4.x  // r5.z <- mat._m20
mov r6.x, r2.y  // r6.x <- mat._m01
mov r6.y, r3.y  // r6.y <- mat._m11
mov r6.z, r4.y  // r6.z <- mat._m21
mov r4.x, r2.z  // r4.x <- mat._m02
mov r4.y, r3.z  // r4.y <- mat._m12
mov r4.z, r4.z  // r4.z <- mat._m22

#line 109
mul r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r2.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r1.xyz, r1.xyzx, r2.xyzx

#line 112
dp3 r2.x, r1.xyzx, r5.xyzx
dp3 r2.y, r1.xyzx, r6.xyzx
dp3 r2.z, r1.xyzx, r4.xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r2.xyzx
mov r1.xyz, r1.xyzx  // r1.x <- <CalcNormalFromTangentSpace return value>.x; r1.y <- <CalcNormalFromTangentSpace return value>.y; r1.z <- <CalcNormalFromTangentSpace return value>.z

#line 25 "D:\Desktop\Cumulonimbus\Shader\sample_shader_mtr_ps.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z

#line 27
mov r0.xyzw, r0.xyzw  // r0.x <- pout.color.x; r0.y <- pout.color.y; r0.z <- pout.color.z; r0.w <- pout.color.w

#line 28
mov r1.xyz, r1.xyzx  // r1.x <- pout.normal.x; r1.y <- pout.normal.y; r1.z <- pout.normal.z
mov r1.w, l(1.000000)  // r1.w <- pout.normal.w

#line 29
mov r2.xyzw, v1.xyzw  // r2.x <- pout.mro.x; r2.y <- pout.mro.y; r2.z <- pout.mro.z; r2.w <- pout.mro.w

#line 31
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xyzw, r2.xyzw
ret 
// Approximately 42 instruction slots used
