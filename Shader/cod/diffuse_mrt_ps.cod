//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer LightCB
// {
//
//   float3 light_position;             // Offset:    0 Size:    12 [unused]
//   float orthographic_view_width;     // Offset:   12 Size:     4 [unused]
//   float3 light_direction;            // Offset:   16 Size:    12
//   float orthographic_view_height;    // Offset:   28 Size:     4 [unused]
//   float3 light_color;                // Offset:   32 Size:    12 [unused]
//   float orthographic_near_z;         // Offset:   44 Size:     4 [unused]
//   float orthographic_far_z;          // Offset:   48 Size:     4 [unused]
//   float3 light_padding;              // Offset:   52 Size:    12 [unused]
//   float4x4 light_view_matrix;        // Offset:   64 Size:    64 [unused]
//   float4x4 light_perspective_projection_matrix;// Offset:  128 Size:    64 [unused]
//   float4x4 light_perspective_view_projection_matrix;// Offset:  192 Size:    64 [unused]
//   float4x4 light_orthographic_projection_matrix;// Offset:  256 Size:    64 [unused]
//   float4x4 light_orthographic_view_projection_matrix;// Offset:  320 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// default_sampler                   sampler      NA          NA             s0      1 
// texture_depth                     texture  float4          2d             t0      1 
// texture_base_color                texture  float4          2d            t20      1 
// texture_normal                    texture  float4          2d            t21      1 
// LightCB                           cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// W_POSITION               0   xyzw        1     NONE   float   xyzw
// WVP_POSITION             0   xyzw        2     NONE   float       
// NORMAL                   0   xyz         3     NONE   float   xyz 
// TANGENT                  0   xyz         4     NONE   float   xyz 
// BI_NORMAL                0   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float   xyz 
// TEX_POSITION             0   xyz         7     NONE   float   xyz 
// TEXCOORD                 0   xy          8     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.w_position.x; v1.y <- pin.w_position.y; v1.z <- pin.w_position.z; v1.w <- pin.w_position.w; 
//   v2.x <- pin.wvp_position.x; v2.y <- pin.wvp_position.y; v2.z <- pin.wvp_position.z; v2.w <- pin.wvp_position.w; 
//   v3.x <- pin.normal.x; v3.y <- pin.normal.y; v3.z <- pin.normal.z; 
//   v4.x <- pin.tangent.x; v4.y <- pin.tangent.y; v4.z <- pin.tangent.z; 
//   v5.x <- pin.binormal.x; v5.y <- pin.binormal.y; v5.z <- pin.binormal.z; 
//   v6.x <- pin.color.x; v6.y <- pin.color.y; v6.z <- pin.color.z; v6.w <- pin.color.w; 
//   v7.x <- pin.tex_position.x; v7.y <- pin.tex_position.y; v7.z <- pin.tex_position.z; 
//   v8.x <- pin.texcoord0.x; v8.y <- pin.texcoord0.y; 
//   o2.x <- <main return value>.position.x; o2.y <- <main return value>.position.y; o2.z <- <main return value>.position.z; o2.w <- <main return value>.position.w; 
//   o1.x <- <main return value>.normal.x; o1.y <- <main return value>.normal.y; o1.z <- <main return value>.normal.z; o1.w <- <main return value>.normal.w; 
//   o0.x <- <main return value>.color.x; o0.y <- <main return value>.color.y; o0.z <- <main return value>.color.z; o0.w <- <main return value>.color.w
//
#line 22 "D:\Desktop\Cumulonimbus\Shader\diffuse_mrt_ps.hlsl"
mov r0.xyz, l(1.000000,1.000000,1.000000,0)  // r0.x <- reflectance.x; r0.y <- reflectance.y; r0.z <- reflectance.z

#line 24
nop 
mov r1.xyz, v3.xyzx
mov r2.xyz, cb2[1].xyzx
mov r3.xyz, v6.xyzx
mov r0.xyz, r0.xyzx

#line 14 "D:\Desktop\Cumulonimbus\Shader\functions_lighting.hlsli"
mov r2.xyz, -r2.xyzx
dp3 r0.w, r1.xyzx, r2.xyzx  // r0.w <- D

#line 15
itof r1.x, l(0)
max r0.w, r0.w, r1.x

#line 16
mul r0.xyz, r3.xyzx, r0.xyzx
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- <Diffuse return value>.x; r0.y <- <Diffuse return value>.y; r0.z <- <Diffuse return value>.z

#line 24 "D:\Desktop\Cumulonimbus\Shader\diffuse_mrt_ps.hlsl"
mov r0.xyz, r0.xyzx  // r0.x <- f3_diffuse.x; r0.y <- f3_diffuse.y; r0.z <- f3_diffuse.z

#line 26
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v8.xyxx, t21.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- normal_map.x; r1.y <- normal_map.y; r1.z <- normal_map.z

#line 27
nop 
mov r1.xyz, r1.xyzx

#line 55 "D:\Desktop\Cumulonimbus\Shader\functions_utility.hlsli"
dp3 r0.w, v4.xyzx, v4.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v4.xyzx  // r2.x <- vx.x; r2.y <- vx.y; r2.z <- vx.z

#line 56
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, v5.xyzx  // r3.x <- vy.x; r3.y <- vy.y; r3.z <- vy.z

#line 57
dp3 r0.w, v3.xyzx, v3.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, v3.xyzx  // r4.x <- vz.x; r4.y <- vz.y; r4.z <- vz.z

#line 60
mov r5.x, r2.x  // r5.x <- mat._m00
mov r5.y, r3.x  // r5.y <- mat._m10
mov r5.z, r4.x  // r5.z <- mat._m20
mov r6.x, r2.y  // r6.x <- mat._m01
mov r6.y, r3.y  // r6.y <- mat._m11
mov r6.z, r4.y  // r6.z <- mat._m21
mov r4.x, r2.z  // r4.x <- mat._m02
mov r4.y, r3.z  // r4.y <- mat._m12
mov r4.z, r4.z  // r4.z <- mat._m22

#line 61
mul r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r2.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r1.xyz, r1.xyzx, r2.xyzx

#line 64
dp3 r2.x, r1.xyzx, r5.xyzx
dp3 r2.y, r1.xyzx, r6.xyzx
dp3 r2.z, r1.xyzx, r4.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r2.xyzx
mov r1.xyz, r1.xyzx  // r1.x <- <CalcNormalFromTangentSpace return value>.x; r1.y <- <CalcNormalFromTangentSpace return value>.y; r1.z <- <CalcNormalFromTangentSpace return value>.z

#line 27 "D:\Desktop\Cumulonimbus\Shader\diffuse_mrt_ps.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z

#line 29
nop 
nop 
nop 
mov r0.w, v7.z
mov r2.x, l(0.000001)

#line 6 "D:\Desktop\Cumulonimbus\Shader\shadow_functions.hlsli"
sample_indexable(texture2d)(float,float,float,float) r2.y, v7.xyxx, t0.yxzw, s0
mov r2.y, r2.y  // r2.y <- d

#line 7
sample_indexable(texture2d)(float,float,float,float) r2.z, v7.xyxx, t0.xzyw, s0
mov r2.z, r2.z  // r2.z <- d2

#line 10
mov r2.w, l(1.000000)
mul r3.x, r2.y, r2.y
mul r2.w, r2.w, r3.x
mov r2.w, -r2.w
add r2.z, r2.w, r2.z
max r2.x, r2.z, r2.x  // r2.x <- variance

#line 13
mov r2.y, -r2.y
add r0.w, r0.w, r2.y
mov r2.y, l(1.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r2.y
add r0.w, r0.w, r2.x
div r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
min r2.xyz, r0.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)  // r2.z <- p_max

#line 18
mov r2.xyz, r2.xyzx  // r2.x <- <GetVarianceShadow return value>.x; r2.y <- <GetVarianceShadow return value>.y; r2.z <- <GetVarianceShadow return value>.z

#line 29 "D:\Desktop\Cumulonimbus\Shader\diffuse_mrt_ps.hlsl"
mov r2.xyz, r2.xyzx  // r2.x <- shadow_color.x; r2.y <- shadow_color.y; r2.z <- shadow_color.z

#line 31
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v8.xyxx, t20.xyzw, s0
mov r3.xyz, r3.xyzx  // r3.x <- tex_color.x; r3.y <- tex_color.y; r3.z <- tex_color.z

#line 32
nop 
mov r3.xyz, r3.xyzx
mov r0.w, l(2.200000)

#line 23 "D:\Desktop\Cumulonimbus\Shader\functions_utility.hlsli"
mov r4.xyz, -r3.xyzx
max r3.xyz, r3.xyzx, r4.xyzx
div r0.w, l(1.000000), r0.w
log r3.xyz, r3.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
exp r3.xyz, r3.xyzx  // r3.x <- <CalcGammaCorrection return value>.x; r3.y <- <CalcGammaCorrection return value>.y; r3.z <- <CalcGammaCorrection return value>.z

#line 32 "D:\Desktop\Cumulonimbus\Shader\diffuse_mrt_ps.hlsl"
mov r3.xyz, r3.xyzx  // r3.x <- tex_color.x; r3.y <- tex_color.y; r3.z <- tex_color.z

#line 34
itof r0.w, l(1)
mul r0.xyz, r0.xyzx, r3.xyzx
mul r0.w, r0.w, l(1.000000)
itof r2.w, l(1)
mul r3.xyz, r2.xyzx, r0.xyzx  // r3.x <- pout.color.x; r3.y <- pout.color.y; r3.z <- pout.color.z
mul r3.w, r0.w, r2.w  // r3.w <- pout.color.w

#line 35
mov r1.xyz, r1.xyzx  // r1.x <- pout.normal.x; r1.y <- pout.normal.y; r1.z <- pout.normal.z
mov r1.w, l(1.000000)  // r1.w <- pout.normal.w

#line 36
mov r0.xyzw, v1.xyzw  // r0.x <- pout.position.x; r0.y <- pout.position.y; r0.z <- pout.position.z; r0.w <- pout.position.w

#line 38
mov o0.xyzw, r3.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xyzw, r0.xyzw
ret 
// Approximately 97 instruction slots used
