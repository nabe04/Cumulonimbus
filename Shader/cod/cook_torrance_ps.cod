//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer LightCB
// {
//
//   float3 light_position;             // Offset:    0 Size:    12
//   float orthographic_view_width;     // Offset:   12 Size:     4 [unused]
//   float3 light_direction;            // Offset:   16 Size:    12
//   float orthographic_view_height;    // Offset:   28 Size:     4 [unused]
//   float3 light_color;                // Offset:   32 Size:    12
//   float orthographic_near_z;         // Offset:   44 Size:     4 [unused]
//   float orthographic_far_z;          // Offset:   48 Size:     4 [unused]
//   float3 light_padding;              // Offset:   52 Size:    12 [unused]
//   float4x4 light_view_matrix;        // Offset:   64 Size:    64 [unused]
//   float4x4 light_perspective_projection_matrix;// Offset:  128 Size:    64 [unused]
//   float4x4 light_perspective_view_projection_matrix;// Offset:  192 Size:    64 [unused]
//   float4x4 light_orthographic_projection_matrix;// Offset:  256 Size:    64 [unused]
//   float4x4 light_orthographic_view_projection_matrix;// Offset:  320 Size:    64 [unused]
//
// }
//
// cbuffer CB_Environment
// {
//
//   float roughness;                   // Offset:    0 Size:     4
//   float padding[3];                  // Offset:   16 Size:    36 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LightCB                           cbuffer      NA          NA            cb2      1 
// CB_Environment                    cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// WVP_POSITION             0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyz 
// TEX_POSITION             0   xyz         4     NONE   float       
// TEXCOORD                 0   xy          5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[3], immediateIndexed
dcl_constantbuffer CB6[1], immediateIndexed
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.wvp_position.x; v1.y <- pin.wvp_position.y; v1.z <- pin.wvp_position.z; v1.w <- pin.wvp_position.w; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
//   v3.x <- pin.color.x; v3.y <- pin.color.y; v3.z <- pin.color.z; v3.w <- pin.color.w; 
//   v4.x <- pin.tex_position.x; v4.y <- pin.tex_position.y; v4.z <- pin.tex_position.z; 
//   v5.x <- pin.texcoord0.x; v5.y <- pin.texcoord0.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 14 "D:\Desktop\Cumulonimbus\Shader\cook_torrance_ps.hlsl"
mov r0.xyz, -v1.xyzx
add r0.xyz, r0.xyzx, cb2[0].xyzx  // r0.x <- eye_vector.x; r0.y <- eye_vector.y; r0.z <- eye_vector.z

#line 16
mov r1.xyz, cb2[1].xyzx  // r1.x <- L.x; r1.y <- L.y; r1.z <- L.z

#line 17
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v2.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 18
mov r3.xyz, -r1.xyzx
add r3.xyz, r0.xyzx, r3.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx  // r3.x <- H.x; r3.y <- H.y; r3.z <- H.z

#line 19
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- E.x; r0.y <- E.y; r0.z <- E.z

#line 22
dp3 r0.w, r2.xyzx, r0.xyzx  // r0.w <- NE

#line 23
dp3 r1.w, r2.xyzx, r3.xyzx  // r1.w <- NH

#line 24
dp3 r0.x, r0.xyzx, r3.xyzx  // r0.x <- EH

#line 25
mov r4.xyz, -r1.xyzx
dp3 r0.y, r2.xyzx, r4.xyzx  // r0.y <- NL

#line 26
mov r4.xyz, -r1.xyzx
dp3 r0.z, r4.xyzx, r3.xyzx  // r0.z <- LH

#line 29
nop 
mov r2.w, cb6[0].x
mov r1.w, r1.w

#line 74 "D:\Desktop\Cumulonimbus\Shader\functions.hlsli"
mul r3.x, r1.w, r1.w  // r3.x <- NH2

#line 76
itof r3.y, l(1)
mov r3.z, -r3.x
add r3.y, r3.z, r3.y
mov r3.y, -r3.y
mul r3.z, r2.w, r3.x
mul r3.z, r2.w, r3.z
div r3.y, r3.y, r3.z
mul r3.y, r3.y, l(1.442695)
exp r3.y, r3.y
itof r3.z, l(4)
mul r3.z, r2.w, r3.z
mul r2.w, r2.w, r3.z
mul r2.w, r3.x, r2.w
mul r2.w, r3.x, r2.w
div r2.w, r3.y, r2.w  // r2.w <- <Beckmann return value>

#line 29 "D:\Desktop\Cumulonimbus\Shader\cook_torrance_ps.hlsl"
mov r2.w, r2.w  // r2.w <- D

#line 32
itof r3.x, l(1)
itof r3.y, l(2)
mul r3.y, r1.w, r3.y
mul r3.y, r0.w, r3.y
div r3.y, r3.y, r0.x
itof r3.z, l(2)
mul r1.w, r1.w, r3.z
mul r0.y, r0.y, r1.w
div r0.x, r0.y, r0.x
min r0.x, r0.x, r3.y
min r0.x, r0.x, r3.x  // r0.x <- G

#line 35
mov r0.y, l(20.000000)  // r0.y <- n

#line 36
mul r0.y, r0.y, r0.y
mul r1.w, r0.z, r0.z
add r0.y, r0.y, r1.w
itof r1.w, l(1)
mov r1.w, -r1.w
add r0.y, r0.y, r1.w
sqrt r0.y, r0.y  // r0.y <- g

#line 37
add r1.w, r0.z, r0.y  // r1.w <- gpc

#line 38
mov r3.x, -r0.z
add r0.y, r0.y, r3.x  // r0.y <- gnc

#line 39
mul r3.x, r0.z, r1.w
itof r3.y, l(1)
mov r3.y, -r3.y
add r3.x, r3.y, r3.x  // r3.x <- cgpc

#line 40
mul r0.z, r0.y, r0.z
itof r3.y, l(1)
add r0.z, r0.z, r3.y  // r0.z <- cgnc

#line 41
mul r3.y, r0.y, l(0.500000)
mul r0.y, r0.y, r3.y
itof r3.y, l(1)
mul r3.x, r3.x, r3.x
mul r0.z, r0.z, r0.z
div r0.z, r3.x, r0.z
add r0.z, r0.z, r3.y
mul r0.y, r0.z, r0.y
mul r0.z, r1.w, r1.w
div r0.y, r0.y, r0.z  // r0.y <- F

#line 44
nop 
mov r2.xyz, r2.xyzx
mov r1.xyz, r1.xyzx
mov r3.xyz, cb2[2].xyzx
mov r4.xyz, l(1.000000,1.000000,1.000000,0)

#line 11 "D:\Desktop\Cumulonimbus\Shader\functions.hlsli"
mov r1.xyz, -r1.xyzx
dp3 r0.z, r2.xyzx, r1.xyzx  // r0.z <- D

#line 12
itof r1.x, l(0)
max r0.z, r0.z, r1.x

#line 13
mul r1.xyz, r3.xyzx, r4.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx  // r1.x <- <Diffuse return value>.x; r1.y <- <Diffuse return value>.y; r1.z <- <Diffuse return value>.z

#line 44 "D:\Desktop\Cumulonimbus\Shader\cook_torrance_ps.hlsl"
min r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r1.xyzx, v3.xyzx  // r1.x <- f4_diffuse.x; r1.y <- f4_diffuse.y; r1.z <- f4_diffuse.z

#line 45
mov r1.w, l(1.000000)  // r1.w <- f4_diffuse.w

#line 47
itof r0.z, l(0)
mul r0.y, r2.w, r0.y
mul r0.x, r0.x, r0.y
div r0.x, r0.x, r0.w
max r0.x, r0.x, r0.z
mov r2.xyz, cb2[2].xyzx
mov r2.w, l(1.000000)
mul r0.xyzw, r0.xxxx, r2.xyzw
add o0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 104 instruction slots used
