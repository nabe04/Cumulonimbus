//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBLight
// {
//
//   float4 light_position;             // Offset:    0 Size:    16 [unused]
//   float4 light_direction;            // Offset:   16 Size:    16
//   float4 light_ambient;              // Offset:   32 Size:    16
//   float4 light_color;                // Offset:   48 Size:    16 [unused]
//   row_major float4x4 light_view_matrix;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 light_perspective_projection_matrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 light_perspective_view_projection_matrix;// Offset:  192 Size:    64 [unused]
//   float light_orthographic_view_width;// Offset:  256 Size:     4 [unused]
//   float light_orthographic_view_height;// Offset:  260 Size:     4 [unused]
//   float light_orthographic_near_z;   // Offset:  264 Size:     4 [unused]
//   float light_orthographic_far_z;    // Offset:  268 Size:     4 [unused]
//   row_major float4x4 light_orthographic_projection_matrix;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 light_orthographic_view_projection_matrix;// Offset:  336 Size:    64 [unused]
//
// }
//
// cbuffer CB_Environment
// {
//
//   float roughness;                   // Offset:    0 Size:     4
//   float padding[3];                  // Offset:   16 Size:    36 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBLight                           cbuffer      NA          NA            cb2      1 
// CB_Environment                    cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
// COLOR                    0   xyzw        3     NONE   float   xyz 
// EYE_VECTOR               0   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[3], immediateIndexed
dcl_constantbuffer CB6[1], immediateIndexed
dcl_input_ps linear v1.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.normal.x; v1.y <- pin.normal.y; v1.z <- pin.normal.z; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   v3.x <- pin.color.x; v3.y <- pin.color.y; v3.z <- pin.color.z; v3.w <- pin.color.w; 
//   v4.x <- pin.eyeVector.x; v4.y <- pin.eyeVector.y; v4.z <- pin.eyeVector.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 7 "C:\Users\ryoki\Desktop\Cumlonimbus\Shader\cook_torrance_ps.hlsl"
mov r0.xyz, cb2[1].xyzx  // r0.x <- L.x; r0.y <- L.y; r0.z <- L.z

#line 8
dp3 r0.w, v1.xyzx, v1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v1.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 9
mov r2.xyz, -r0.xyzx
add r2.xyz, r2.xyzx, v4.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx  // r2.x <- H.x; r2.y <- H.y; r2.z <- H.z

#line 10
dp3 r0.w, v4.xyzx, v4.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, v4.xyzx  // r3.x <- E.x; r3.y <- E.y; r3.z <- E.z

#line 13
dp3 r0.w, r1.xyzx, r3.xyzx  // r0.w <- NE

#line 14
dp3 r1.w, r1.xyzx, r2.xyzx  // r1.w <- NH

#line 15
dp3 r2.w, r3.xyzx, r2.xyzx  // r2.w <- EH

#line 16
mov r3.xyz, -r0.xyzx
dp3 r3.x, r1.xyzx, r3.xyzx  // r3.x <- NL

#line 17
mov r3.yzw, -r0.xxyz
dp3 r2.x, r3.yzwy, r2.xyzx  // r2.x <- LH

#line 20
nop 
mov r2.y, cb6[0].x
mov r1.w, r1.w

#line 74 "C:\Users\ryoki\Desktop\Cumlonimbus\Shader\functions.hlsli"
mul r2.z, r1.w, r1.w  // r2.z <- NH2

#line 76
itof r3.y, l(1)
mov r3.z, -r2.z
add r3.y, r3.z, r3.y
mov r3.y, -r3.y
mul r3.z, r2.y, r2.z
mul r3.z, r2.y, r3.z
div r3.y, r3.y, r3.z
mul r3.y, r3.y, l(1.442695)
exp r3.y, r3.y
itof r3.z, l(4)
mul r3.z, r2.y, r3.z
mul r2.y, r2.y, r3.z
mul r2.y, r2.z, r2.y
mul r2.y, r2.z, r2.y
div r2.y, r3.y, r2.y  // r2.y <- <Beckmann return value>

#line 20 "C:\Users\ryoki\Desktop\Cumlonimbus\Shader\cook_torrance_ps.hlsl"
mov r2.y, r2.y  // r2.y <- D

#line 23
itof r2.z, l(1)
itof r3.y, l(2)
mul r3.y, r1.w, r3.y
mul r3.y, r0.w, r3.y
div r3.y, r3.y, r2.w
itof r3.z, l(2)
mul r1.w, r1.w, r3.z
mul r1.w, r3.x, r1.w
div r1.w, r1.w, r2.w
min r1.w, r1.w, r3.y
min r1.w, r1.w, r2.z  // r1.w <- G

#line 26
mov r2.z, l(20.000000)  // r2.z <- n

#line 27
mul r2.z, r2.z, r2.z
mul r2.w, r2.x, r2.x
add r2.z, r2.w, r2.z
itof r2.w, l(1)
mov r2.w, -r2.w
add r2.z, r2.w, r2.z
sqrt r2.z, r2.z  // r2.z <- g

#line 28
add r2.w, r2.x, r2.z  // r2.w <- gpc

#line 29
mov r3.x, -r2.x
add r2.z, r2.z, r3.x  // r2.z <- gnc

#line 30
mul r3.x, r2.w, r2.x
itof r3.y, l(1)
mov r3.y, -r3.y
add r3.x, r3.y, r3.x  // r3.x <- cgpc

#line 31
mul r2.x, r2.z, r2.x
itof r3.y, l(1)
add r2.x, r2.x, r3.y  // r2.x <- cgnc

#line 32
mul r3.y, r2.z, l(0.500000)
mul r2.z, r2.z, r3.y
itof r3.y, l(1)
mul r3.x, r3.x, r3.x
mul r2.x, r2.x, r2.x
div r2.x, r3.x, r2.x
add r2.x, r2.x, r3.y
mul r2.x, r2.x, r2.z
mul r2.z, r2.w, r2.w
div r2.x, r2.x, r2.z  // r2.x <- F

#line 35
nop 
mov r1.xyz, r1.xyzx
mov r0.xyz, r0.xyzx
mov r3.xyz, cb2[2].xyzx
mov r4.xyz, l(1.000000,1.000000,1.000000,0)

#line 11 "C:\Users\ryoki\Desktop\Cumlonimbus\Shader\functions.hlsli"
mov r0.xyz, -r0.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx  // r0.x <- D

#line 12
itof r0.y, l(0)
max r0.x, r0.x, r0.y

#line 13
mul r1.xyz, r3.xyzx, r4.xyzx
mul r0.xyz, r0.xxxx, r1.xyzx  // r0.x <- <Diffuse return value>.x; r0.y <- <Diffuse return value>.y; r0.z <- <Diffuse return value>.z

#line 35 "C:\Users\ryoki\Desktop\Cumlonimbus\Shader\cook_torrance_ps.hlsl"
min r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r3.xyz, r0.xyzx, v3.xyzx  // r3.x <- f4_diffuse.x; r3.y <- f4_diffuse.y; r3.z <- f4_diffuse.z

#line 36
mov r3.w, l(1.000000)  // r3.w <- f4_diffuse.w

#line 38
itof r0.x, l(0)
mul r0.y, r2.y, r2.x
mul r0.y, r1.w, r0.y
div r0.y, r0.y, r0.w
max r0.x, r0.y, r0.x
mul r0.xyzw, r0.xxxx, cb2[2].xyzw
add o0.xyzw, r0.xyzw, r3.xyzw
ret 
// Approximately 100 instruction slots used
