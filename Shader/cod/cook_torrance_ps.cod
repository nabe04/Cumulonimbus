//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer LightCB
// {
//
//   float3 light_position;             // Offset:    0 Size:    12
//   float orthographic_view_width;     // Offset:   12 Size:     4 [unused]
//   float3 light_direction;            // Offset:   16 Size:    12
//   float orthographic_view_height;    // Offset:   28 Size:     4 [unused]
//   float3 light_color;                // Offset:   32 Size:    12
//   float orthographic_near_z;         // Offset:   44 Size:     4 [unused]
//   float orthographic_far_z;          // Offset:   48 Size:     4 [unused]
//   float3 light_padding;              // Offset:   52 Size:    12 [unused]
//   float4x4 light_view_matrix;        // Offset:   64 Size:    64 [unused]
//   float4x4 light_perspective_projection_matrix;// Offset:  128 Size:    64 [unused]
//   float4x4 light_perspective_view_projection_matrix;// Offset:  192 Size:    64 [unused]
//   float4x4 light_orthographic_projection_matrix;// Offset:  256 Size:    64 [unused]
//   float4x4 light_orthographic_view_projection_matrix;// Offset:  320 Size:    64 [unused]
//
// }
//
// cbuffer MetalCB
// {
//
//   float metal_roughness;             // Offset:    0 Size:     4
//   float3 metal_padding;              // Offset:    4 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LightCB                           cbuffer      NA          NA            cb2      1 
// MetalCB                           cbuffer      NA          NA           cb10      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// WVP_POSITION             0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyz 
// TEX_POSITION             0   xyz         4     NONE   float       
// TEXCOORD                 0   xy          5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB2[3], immediateIndexed
dcl_constantbuffer CB10[1], immediateIndexed
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 4
add r0.xyz, -v1.xyzx, cb2[0].xyzx
add r1.xyz, r0.xyzx, -cb2[1].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, -cb2[1].xyzx, r1.xyzx
mad r1.w, r0.w, r0.w, l(399.000000)
sqrt r1.w, r1.w
add r2.x, r0.w, r1.w
add r1.w, -r0.w, r1.w
mad r2.y, r0.w, r2.x, l(-1.000000)
mad r0.w, r0.w, r1.w, l(1.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, l(0.500000)
mul r0.w, r0.w, r0.w
mul r2.xy, r2.xyxx, r2.xyxx
div r0.w, r2.y, r0.w
add r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, r1.w
div r0.w, r0.w, r2.x
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v2.xyzx
dp3 r1.w, r2.xyzx, r1.xyzx
mad r2.w, -r1.w, r1.w, l(1.000000)
mul r3.x, cb10[0].x, cb10[0].x
mul r3.y, r1.w, r1.w
add r1.w, r1.w, r1.w
mul r3.x, r3.y, r3.x
mul r3.y, r3.y, r3.x
div r2.w, -r2.w, r3.x
mul r2.w, r2.w, l(1.442695)
exp r2.w, r2.w
mul r3.x, r3.y, l(4.000000)
div r2.w, r2.w, r3.x
mul r0.w, r0.w, r2.w
dp3 r2.w, r0.xyzx, r0.xyzx
rsq r2.w, r2.w
mul r0.xyz, r0.xyzx, r2.wwww
dp3 r1.x, r0.xyzx, r1.xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
dp3 r0.y, r2.xyzx, -cb2[1].xyzx
mul r0.z, r0.x, r1.w
mul r1.y, r0.y, r1.w
max r0.y, r0.y, l(0.000000)
mul r2.xyz, r0.yyyy, cb2[2].xyzx
min r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xyz, r2.xyzx, v3.xyzx
div r0.y, r1.y, r1.x
div r0.z, r0.z, r1.x
min r0.y, r0.y, r0.z
min r0.y, r0.y, l(1.000000)
mul r0.y, r0.y, r0.w
div r0.x, r0.y, r0.x
max r0.x, r0.x, l(0.000000)
mov r1.xyz, cb2[2].xyzx
mov r1.w, l(1.000000)
mov r2.w, l(1.000000)
mad o0.xyzw, r1.xyzw, r0.xxxx, r2.xyzw
ret 
// Approximately 60 instruction slots used
