//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer DistortCB
// {
//
//   float distort_inner_circle;        // Offset:    0 Size:     4
//   float distort_outer_circle;        // Offset:    4 Size:     4
//   float distort_elapsed_time;        // Offset:    8 Size:     4
//   float distort_time_scale;          // Offset:   12 Size:     4
//   float distort_noise_scale;         // Offset:   16 Size:     4
//   float distort_noise_attenuation;   // Offset:   20 Size:     4
//   float2 distort_scroll_direction;   // Offset:   24 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// default_sampler                   sampler      NA          NA             s0      1 
// texture_post_process              texture  float4          2d            t35      1 
// DistortCB                         cbuffer      NA          NA           cb10      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB10[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t35
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- texcoord.x; v1.y <- texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 9 "D:\Desktop\Cumulonimbus\Shader\distort.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t35.xyzw, s0  // r0.x <- screen_color.x; r0.y <- screen_color.y; r0.z <- screen_color.z; r0.w <- screen_color.w

#line 10
nop 
mov r1.xy, v1.xyxx

#line 168 "D:\Desktop\Cumulonimbus\Shader\functions_utility.hlsli"
mov r1.z, -r1.y  // r1.z <- uv.y

#line 169
mul r1.xy, r1.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000)
mov r1.zw, l(-0.000000,-0.000000,-1.000000,1.000000)
add r1.xy, r1.zwzz, r1.xyxx  // r1.x <- pos_xy.x; r1.y <- pos_xy.y

#line 171
mov r1.xy, r1.xyxx  // r1.x <- <UvToNDC return value>.x; r1.y <- <UvToNDC return value>.y

#line 10 "D:\Desktop\Cumulonimbus\Shader\distort.hlsl"
mov r1.xy, r1.xyxx  // r1.x <- ndc_pos.x; r1.y <- ndc_pos.y

#line 13
dp2 r1.x, r1.xyxx, r1.xyxx
sqrt r1.x, r1.x  // r1.x <- len

#line 17
mov r1.y, -cb10[0].y
add r1.x, r1.y, r1.x
mov r1.y, -cb10[0].x
add r1.y, r1.y, cb10[0].y
div r1.x, r1.x, r1.y
min r1.x, r1.x, l(1.000000)
max r1.x, r1.x, l(0.000000)  // r1.x <- strength

#line 19
ge r1.y, l(0.000000), r1.x
if_nz r1.y

#line 21
  mov r0.xyzw, r0.xyzw  // r0.x <- final_color.x; r0.y <- final_color.y; r0.z <- final_color.z; r0.w <- final_color.w

#line 22
else 

#line 25
  itof r2.y, l(0)  // r2.y <- scroll_time.y
  mov r2.x, cb10[0].z  // r2.x <- scroll_time.x

#line 27
  mov r1.yz, cb10[1].zzwz  // r1.y <- scroll_direction.x; r1.z <- scroll_direction.y

#line 28
  nop 
  mov r1.y, r1.y
  itof r1.w, l(0)

#line 43 "D:\Desktop\Cumulonimbus\Shader\functions_utility.hlsli"
  round_ni r2.z, r1.y
  ftoi r2.z, r2.z  // r2.z <- l_val

#line 44
  round_ni r1.w, r1.w
  ftoi r1.w, r1.w  // r1.w <- r_val

#line 47
  ineg r1.w, r1.w
  iadd r1.w, r1.w, r2.z
  itof r1.w, r1.w
  ge r1.w, l(0.000000), r1.w
  movc r1.w, r1.w, l(-1), l(0)  // r1.w <- <IsEqual return value>

#line 28 "D:\Desktop\Cumulonimbus\Shader\distort.hlsl"
  nop 
  mov r1.z, r1.z
  itof r2.z, l(0)

#line 43 "D:\Desktop\Cumulonimbus\Shader\functions_utility.hlsli"
  round_ni r2.w, r1.z
  ftoi r2.w, r2.w  // r2.w <- l_val

#line 44
  round_ni r2.z, r2.z
  ftoi r2.z, r2.z  // r2.z <- r_val

#line 47
  ineg r2.z, r2.z
  iadd r2.z, r2.z, r2.w
  itof r2.z, r2.z
  ge r2.z, l(0.000000), r2.z
  movc r2.z, r2.z, l(-1), l(0)  // r2.z <- <IsEqual return value>

#line 28 "D:\Desktop\Cumulonimbus\Shader\distort.hlsl"
  and r1.w, r1.w, r2.z
  if_nz r1.w

#line 31
    dp2 r1.w, cb10[1].zwzz, cb10[1].zwzz
    rsq r1.w, r1.w
    mul r1.yz, r1.wwww, cb10[1].zzwz  // r1.y <- scroll_direction.x

#line 32
  endif 

#line 34
  add r1.yz, r1.yyzy, r2.xxyx
  mul r1.yz, r1.yyzy, cb10[0].wwww  // r1.y <- uv_scroll_val.x; r1.z <- uv_scroll_val.y

#line 35
  nop 
  mul r2.xy, v1.xyxx, cb10[1].xxxx

#line 65 "D:\Desktop\Cumulonimbus\Shader\functions_utility.hlsli"
  round_ni r2.zw, r2.xxxy  // r2.z <- p.x; r2.w <- p.y

#line 66
  frc r2.xy, r2.xyxx  // r2.x <- f.x; r2.y <- f.y

#line 67
  mul r3.xy, r2.xyxx, r2.xyxx
  mul r3.zw, r2.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000)
  mov r3.zw, -r3.zzzw
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, 3.000000, 3.000000)
  mul r3.xy, r3.zwzz, r3.xyxx  // r3.x <- u.x; r3.y <- u.y

#line 74
  nop 
  itof r3.zw, l(0, 0, 0, 0)
  add r3.zw, r2.zzzw, r3.zzzw

#line 55
  dp2 r1.w, r3.zwzz, l(127.099998, 311.700012, 0.000000, 0.000000)  // r1.w <- val.x

#line 57
  sincos r1.w, null, r1.w
  mul r1.w, r1.w, l(43758.546875)
  frc r1.w, r1.w
  mul r1.w, r1.w, l(2.000000)
  add r1.w, r1.w, l(-1.000000)  // r1.w <- <Random return value>

#line 74
  mov r1.w, r1.w  // r1.w <- v00

#line 75
  nop 
  itof r3.zw, l(0, 0, 1, 0)
  add r3.zw, r2.zzzw, r3.zzzw

#line 55
  dp2 r3.z, r3.zwzz, l(127.099998, 311.700012, 0.000000, 0.000000)

#line 57
  sincos r3.z, null, r3.z
  mul r3.z, r3.z, l(43758.546875)
  frc r3.z, r3.z
  mul r3.z, r3.z, l(2.000000)
  add r3.z, r3.z, l(-1.000000)  // r3.z <- <Random return value>

#line 75
  mov r3.z, r3.z  // r3.z <- v10

#line 76
  nop 
  itof r4.xy, l(0, 1, 0, 0)
  add r4.xy, r2.zwzz, r4.xyxx

#line 55
  dp2 r3.w, r4.xyxx, l(127.099998, 311.700012, 0.000000, 0.000000)  // r3.w <- val.x

#line 57
  sincos r3.w, null, r3.w
  mul r3.w, r3.w, l(43758.546875)
  frc r3.w, r3.w
  mul r3.w, r3.w, l(2.000000)
  add r3.w, r3.w, l(-1.000000)  // r3.w <- <Random return value>

#line 76
  mov r3.w, r3.w  // r3.w <- v01

#line 77
  nop 
  itof r4.xy, l(1, 1, 0, 0)
  add r2.zw, r2.zzzw, r4.xxxy

#line 55
  dp2 r2.z, r2.zwzz, l(127.099998, 311.700012, 0.000000, 0.000000)

#line 57
  sincos r2.z, null, r2.z
  mul r2.z, r2.z, l(43758.546875)
  frc r2.z, r2.z
  mul r2.z, r2.z, l(2.000000)
  add r2.z, r2.z, l(-1.000000)  // r2.z <- <Random return value>

#line 77
  mov r2.z, r2.z  // r2.z <- v11

#line 79
  itof r4.xy, l(0, 0, 0, 0)
  mov r4.xy, -r4.xyxx
  add r4.xy, r2.xyxx, r4.xyxx
  dp2 r1.w, r1.wwww, r4.xyxx
  itof r4.xy, l(1, 0, 0, 0)
  mov r4.xy, -r4.xyxx
  add r4.xy, r2.xyxx, r4.xyxx
  dp2 r2.w, r3.zzzz, r4.xyxx
  mov r3.z, -r1.w
  add r2.w, r2.w, r3.z
  mul r2.w, r2.w, r3.x
  add r1.w, r1.w, r2.w
  itof r4.xy, l(0, 1, 0, 0)
  mov r4.xy, -r4.xyxx
  add r4.xy, r2.xyxx, r4.xyxx
  dp2 r2.w, r3.wwww, r4.xyxx
  itof r3.zw, l(0, 0, 1, 1)
  mov r3.zw, -r3.zzzw
  add r2.xy, r2.xyxx, r3.zwzz
  dp2 r2.x, r2.zzzz, r2.xyxx
  mov r2.y, -r2.w
  add r2.x, r2.y, r2.x
  mul r2.x, r2.x, r3.x
  add r2.x, r2.x, r2.w
  mov r2.y, -r1.w
  add r2.x, r2.y, r2.x
  mul r2.x, r2.x, r3.y
  add r1.w, r1.w, r2.x
  add r1.w, r1.w, l(0.500000)  // r1.w <- <PerlinNoise return value>

#line 35 "D:\Desktop\Cumulonimbus\Shader\distort.hlsl"
  mul r2.x, r1.w, cb10[1].y
  itof r2.y, l(0)
  add r2.xy, r2.xyxx, v1.xyxx  // r2.x <- noise_uv.x; r2.y <- noise_uv.y

#line 37
  add r1.yz, r1.yyzy, r2.xxyx
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.yzyy, t35.xyzw, s0  // r2.x <- distort_color.x; r2.y <- distort_color.y; r2.z <- distort_color.z; r2.w <- distort_color.w

#line 39
  mul r2.xyzw, r1.xxxx, r2.xyzw
  mov r1.x, -r1.x
  add r1.x, r1.x, l(1.000000)
  mul r1.xyzw, r0.xyzw, r1.xxxx
  add r0.xyzw, r1.xyzw, r2.xyzw  // r0.x <- final_color.x; r0.y <- final_color.y; r0.z <- final_color.z; r0.w <- final_color.w

#line 40
endif 

#line 42
mov o0.xyzw, r0.xyzw
ret 
// Approximately 148 instruction slots used
