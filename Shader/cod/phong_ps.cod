//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBMesh
// {
//
//   float4 m_Color;                    // Offset:    0 Size:    16 [unused]
//   float4 m_Ka;                       // Offset:   16 Size:    16
//   float4 m_Kd;                       // Offset:   32 Size:    16 [unused]
//   float4 m_Ks;                       // Offset:   48 Size:    16 [unused]
//
// }
//
// cbuffer CBLight
// {
//
//   float4 light_position;             // Offset:    0 Size:    16 [unused]
//   float4 light_direction;            // Offset:   16 Size:    16
//   float4 light_ambient;              // Offset:   32 Size:    16 [unused]
//   float4 light_color;                // Offset:   48 Size:    16 [unused]
//   row_major float4x4 view_matrix;    // Offset:   64 Size:    64 [unused]
//   row_major float4x4 light_perspective_projection_matrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 light_perspective_view_projection_matrix;// Offset:  192 Size:    64 [unused]
//   float light_orthographic_view_width;// Offset:  256 Size:     4 [unused]
//   float light_orthographic_view_height;// Offset:  260 Size:     4 [unused]
//   float light_orthographic_near_z;   // Offset:  264 Size:     4 [unused]
//   float light_orthographic_far_z;    // Offset:  268 Size:     4 [unused]
//   row_major float4x4 light_orthographic_projection_matrix;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 light_orthographic_view_projection_matrix;// Offset:  336 Size:    64 [unused]
//
// }
//
// cbuffer CB_Environment
// {
//
//   float specular;                    // Offset:    0 Size:     4
//   float refCoefficient;              // Offset:    4 Size:     4
//   float powValue;                    // Offset:    8 Size:     4
//   float padding;                     // Offset:   16 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// defaultSampler                    sampler      NA          NA             s0      1 
// diffuseTexture                    texture  float4          2d             t0      1 
// CBMesh                            cbuffer      NA          NA            cb1      1 
// CBLight                           cbuffer      NA          NA            cb2      1 
// CB_Environment                    cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
// EYE_VECTOR               0   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[2], immediateIndexed
dcl_constantbuffer CB2[2], immediateIndexed
dcl_constantbuffer CB6[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.normal.x; v1.y <- pin.normal.y; v1.z <- pin.normal.z; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   v3.x <- pin.color.x; v3.y <- pin.color.y; v3.z <- pin.color.z; v3.w <- pin.color.w; 
//   v4.x <- pin.eyeVector.x; v4.y <- pin.eyeVector.y; v4.z <- pin.eyeVector.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 13 "D:\チEクトップ\Cumulonimbus\Shader\phong_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 14
dp3 r1.x, v1.xyzx, v1.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v1.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 15
dp3 r1.w, v4.xyzx, v4.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v4.xyzx  // r2.x <- E.x; r2.y <- E.y; r2.z <- E.z

#line 16
dp3 r1.w, cb2[1].xyzx, cb2[1].xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, cb2[1].xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 17
mov r4.xyz, l(1.000000,1.000000,1.000000,0)  // r4.x <- reflectance.x; r4.y <- reflectance.y; r4.z <- reflectance.z

#line 19
mov r5.xyz, cb1[1].xyzx  // r5.x <- A.x; r5.y <- A.y; r5.z <- A.z

#line 21
nop 
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r6.xyz, v3.xyzx
mov r4.xyz, r4.xyzx

#line 11 "D:\デスクトップ\Cumulonimbus\Shader\functions.hlsli"
mov r7.xyz, -r3.xyzx
dp3 r1.w, r1.xyzx, r7.xyzx  // r1.w <- D

#line 12
itof r2.w, l(0)
max r1.w, r1.w, r2.w

#line 13
mul r4.xyz, r6.xyzx, r4.xyzx
mul r4.xyz, r1.wwww, r4.xyzx  // r4.x <- <Diffuse return value>.x; r4.y <- <Diffuse return value>.y; r4.z <- <Diffuse return value>.z

#line 21 "D:\チEクトップ\Cumulonimbus\Shader\phong_ps.hlsl"
mov r4.xyz, r4.xyzx  // r4.x <- D.x; r4.y <- D.y; r4.z <- D.z

#line 23
nop 
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r2.xyz, r2.xyzx
mov r1.w, cb6[0].x
mov r2.w, cb6[0].y
mov r3.w, cb6[0].z

#line 51 "D:\デスクトップ\Cumulonimbus\Shader\functions.hlsli"
mov r6.xyz, -r2.xyzx
itof r4.w, l(2)
dp3 r2.x, r1.xyzx, r2.xyzx
mul r2.x, r2.x, r4.w
mul r1.xyz, r1.xyzx, r2.xxxx
add r1.xyz, r1.xyzx, r6.xyzx  // r1.x <- R.x; r1.y <- R.y; r1.z <- R.z

#line 53
itof r2.x, l(0)
mov r3.xyz, -r3.xyzx
dp3 r1.x, r3.xyzx, r1.xyzx
max r1.xyz, r1.xxxx, r2.xxxx  // r1.x <- D.x; r1.y <- D.y; r1.z <- D.z

#line 55
mul r1.w, r1.w, r2.w
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, r3.wwww
exp r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, r1.wwww  // r1.x <- <PhongSpecular return value>.x; r1.y <- <PhongSpecular return value>.y; r1.z <- <PhongSpecular return value>.z

#line 23 "D:\チEクトップ\Cumulonimbus\Shader\phong_ps.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- F.x; r1.y <- F.y; r1.z <- F.z

#line 25
add r2.xyz, r4.xyzx, r5.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mov r1.w, l(1.000000)
mul r1.xyzw, r1.xyzw, v3.xyzw
mul r0.xyzw, r0.xyzw, r1.xyzw

#line 26
mov o0.xyzw, r0.xyzw
ret 
// Approximately 54 instruction slots used
