//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer LightCB
// {
//
//   float3 light_position;             // Offset:    0 Size:    12
//   float orthographic_view_width;     // Offset:   12 Size:     4 [unused]
//   float3 light_direction;            // Offset:   16 Size:    12
//   float orthographic_view_height;    // Offset:   28 Size:     4 [unused]
//   float3 light_color;                // Offset:   32 Size:    12
//   float orthographic_near_z;         // Offset:   44 Size:     4 [unused]
//   float orthographic_far_z;          // Offset:   48 Size:     4 [unused]
//   float3 light_padding;              // Offset:   52 Size:    12 [unused]
//   float4x4 light_view_matrix;        // Offset:   64 Size:    64 [unused]
//   float4x4 light_perspective_projection_matrix;// Offset:  128 Size:    64 [unused]
//   float4x4 light_perspective_view_projection_matrix;// Offset:  192 Size:    64 [unused]
//   float4x4 light_orthographic_projection_matrix;// Offset:  256 Size:    64 [unused]
//   float4x4 light_orthographic_view_projection_matrix;// Offset:  320 Size:    64 [unused]
//
// }
//
// cbuffer PhongCB
// {
//
//   float phong_specular;              // Offset:    0 Size:     4
//   float phong_ref_coefficient;       // Offset:    4 Size:     4
//   float phong_pow_value;             // Offset:    8 Size:     4
//   float phong_padding;               // Offset:   12 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// defaultSampler                    sampler      NA          NA             s0      1 
// texture_base_color                texture  float4          2d            t20      1 
// LightCB                           cbuffer      NA          NA            cb2      1 
// PhongCB                           cbuffer      NA          NA           cb10      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// WVP_POSITION             0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[3], immediateIndexed
dcl_constantbuffer CB10[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.wvp_position.x; v1.y <- pin.wvp_position.y; v1.z <- pin.wvp_position.z; v1.w <- pin.wvp_position.w; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
//   v3.x <- pin.color.x; v3.y <- pin.color.y; v3.z <- pin.color.z; v3.w <- pin.color.w; 
//   v4.x <- pin.texcoord0.x; v4.y <- pin.texcoord0.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 15 "D:\Desktop\Cumulonimbus\Shader\phong_ps.hlsl"
mov r0.xyz, -v1.xyzx
add r0.xyz, r0.xyzx, cb2[0].xyzx  // r0.x <- eye_vector.x; r0.y <- eye_vector.y; r0.z <- eye_vector.z

#line 17
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v4.xyxx, t20.xyzw, s0  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 18
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v2.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 19
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- E.x; r0.y <- E.y; r0.z <- E.z

#line 20
dp3 r0.w, cb2[1].xyzx, cb2[1].xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, cb2[1].xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 21
mov r4.xyz, l(1.000000,1.000000,1.000000,0)  // r4.x <- reflectance.x; r4.y <- reflectance.y; r4.z <- reflectance.z

#line 23
mov r5.xyz, cb2[2].xyzx  // r5.x <- A.x; r5.y <- A.y; r5.z <- A.z

#line 25
nop 
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx
mov r6.xyz, v3.xyzx
mov r4.xyz, r4.xyzx

#line 11 "D:\Desktop\Cumulonimbus\Shader\functions.hlsli"
mov r7.xyz, -r3.xyzx
dp3 r0.w, r2.xyzx, r7.xyzx  // r0.w <- D

#line 12
itof r2.w, l(0)
max r0.w, r0.w, r2.w

#line 13
mul r4.xyz, r6.xyzx, r4.xyzx
mul r4.xyz, r0.wwww, r4.xyzx  // r4.x <- <Diffuse return value>.x; r4.y <- <Diffuse return value>.y; r4.z <- <Diffuse return value>.z

#line 25 "D:\Desktop\Cumulonimbus\Shader\phong_ps.hlsl"
mov r4.xyz, r4.xyzx  // r4.x <- D.x; r4.y <- D.y; r4.z <- D.z

#line 27
nop 
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx
mov r0.xyz, r0.xyzx
mov r0.w, cb10[0].x
mov r2.w, cb10[0].y
mov r3.w, cb10[0].z

#line 51 "D:\Desktop\Cumulonimbus\Shader\functions.hlsli"
mov r6.xyz, -r0.xyzx
itof r4.w, l(2)
dp3 r0.x, r2.xyzx, r0.xyzx
mul r0.x, r0.x, r4.w
mul r0.xyz, r2.xyzx, r0.xxxx
add r0.xyz, r0.xyzx, r6.xyzx  // r0.x <- R.x; r0.y <- R.y; r0.z <- R.z

#line 53
itof r2.x, l(0)
mov r3.xyz, -r3.xyzx
dp3 r0.x, r3.xyzx, r0.xyzx
max r0.xyz, r0.xxxx, r2.xxxx  // r0.x <- D.x; r0.y <- D.y; r0.z <- D.z

#line 55
mul r0.w, r0.w, r2.w
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, r3.wwww
exp r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, r0.wwww  // r0.x <- <PhongSpecular return value>.x; r0.y <- <PhongSpecular return value>.y; r0.z <- <PhongSpecular return value>.z

#line 27 "D:\Desktop\Cumulonimbus\Shader\phong_ps.hlsl"
mov r0.xyz, r0.xyzx  // r0.x <- F.x; r0.y <- F.y; r0.z <- F.z

#line 29
add r2.xyz, r4.xyzx, r5.xyzx
add r0.xyz, r0.xyzx, r2.xyzx
mov r0.w, l(1.000000)
mul r0.xyzw, r0.xyzw, v3.xyzw
mul r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 30
mov o0.xyzw, r0.xyzw
ret 
// Approximately 56 instruction slots used
