//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer ScreenFilterCB
// {
//
//   float3 sfilter_filter_color;       // Offset:    0 Size:    12
//   int sfilter_is_grey_scale;         // Offset:   12 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// default_sampler                   sampler      NA          NA             s0      1 
// texture_post_process              texture  float4          2d            t35      1 
// ScreenFilterCB                    cbuffer      NA          NA           cb10      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB10[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t35
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- texcoord.x; v1.y <- texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 9 "D:\Desktop\Cumulonimbus\Shader\screen_filter.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t35.xyzw, s0  // r0.x <- screen_color.x; r0.y <- screen_color.y; r0.z <- screen_color.z

#line 10
mov r0.xyz, r0.xyzx  // r0.x <- final_color.x; r0.y <- final_color.y; r0.z <- final_color.z

#line 12
ige r0.w, cb10[0].w, l(1)
if_nz r0.w

#line 14
  nop 

#line 152 "D:\Desktop\Cumulonimbus\Shader\functions_utility.hlsli"
  dp3 r1.z, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)  // r1.z <- <ToGrayColor return value>
  mov r1.xyz, r1.zzzz

#line 14 "D:\Desktop\Cumulonimbus\Shader\screen_filter.hlsl"
  mov r1.xyz, r1.xyzx  // r1.x <- final_color.x; r1.y <- final_color.y; r1.z <- final_color.z

#line 15
else   // Prior locations: r0.x <- final_color.x; r0.y <- final_color.y; r0.z <- final_color.z

#line 18
  add r1.xyz, r0.xyzx, cb10[0].xyzx  // r1.x <- final_color.x; r1.y <- final_color.y; r1.z <- final_color.z

#line 19
endif 

#line 21
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 14 instruction slots used
