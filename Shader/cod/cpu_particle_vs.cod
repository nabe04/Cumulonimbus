//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBTranslation
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   row_major float4x4 boneTransforms[128];// Offset:   64 Size:  8192 [unused]
//   row_major float4x4 transform_matrix;// Offset: 8256 Size:    64 [unused]
//
// }
//
// cbuffer CB_Particle
// {
//
//   row_major float4x4 particle_transform;// Offset:    0 Size:    64
//   float4 particle_local_position;    // Offset:   64 Size:    16 [unused]
//   float4 particle_color;             // Offset:   80 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBTranslation                     cbuffer      NA          NA            cb0      1 
// CB_Particle                       cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB6[6], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 2
mul r0.xyz, v0.yyyy, cb6[1].xyzx
mad r0.xyz, v0.xxxx, cb6[0].xyzx, r0.xyzx
mad r0.xyz, v0.zzzz, cb6[2].xyzx, r0.xyzx
add r0.xyz, r0.xyzx, cb6[3].xyzx
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r1.xyzw, r0.xxxx, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb0[2].xyzw, r1.xyzw
add o0.xyzw, r0.xyzw, cb0[3].xyzw
mov o1.xyzw, cb6[5].xyzw
ret 
// Approximately 10 instruction slots used
