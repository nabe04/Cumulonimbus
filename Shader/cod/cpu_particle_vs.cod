//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBTranslation
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   row_major float4x4 boneTransforms[128];// Offset:   64 Size:  8192 [unused]
//   row_major float4x4 transform_matrix;// Offset: 8256 Size:    64 [unused]
//
// }
//
// cbuffer CB_Particle
// {
//
//   row_major float4x4 particle_transform;// Offset:    0 Size:    64
//   float4 particle_local_position;    // Offset:   64 Size:    16 [unused]
//   float4 particle_color;             // Offset:   80 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBTranslation                     cbuffer      NA          NA            cb0      1 
// CB_Particle                       cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB6[6], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   o1.x <- <main return value>.color.x; o1.y <- <main return value>.color.y; o1.z <- <main return value>.color.z; o1.w <- <main return value>.color.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 22 "C:\Users\ryoki\Desktop\Cumulonimbus\Shader\cpu_particle_vs.hlsl"
mul r0.xyz, v0.xxxx, cb6[0].xyzx
mul r1.xyz, v0.yyyy, cb6[1].xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.xyz, v0.zzzz, cb6[2].xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.xyz, cb6[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- world_pos.x; r0.y <- world_pos.y; r0.z <- world_pos.z

#line 23
mul r1.xyzw, r0.xxxx, cb0[0].xyzw
mul r2.xyzw, r0.yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.zzzz, cb0[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[3].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- wvp_pos.x; r0.y <- wvp_pos.y; r0.z <- wvp_pos.z; r0.w <- wvp_pos.w

#line 26
mov r0.xyzw, r0.xyzw  // r0.x <- pin.position.x; r0.y <- pin.position.y; r0.z <- pin.position.z; r0.w <- pin.position.w

#line 27
mov r1.xyzw, cb6[5].xyzw  // r1.x <- pin.color.x; r1.y <- pin.color.y; r1.z <- pin.color.z; r1.w <- pin.color.w

#line 29
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
ret 
// Approximately 19 instruction slots used
