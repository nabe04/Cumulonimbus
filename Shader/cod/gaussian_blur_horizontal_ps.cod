//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// linear_border_sampler_state       sampler      NA          NA             s0      1 
// hdr_colour_map                    texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0, 0.227027, 0, 0},
                              { 1.384615, 0.316216, 0, 0},
                              { 3.230769, 0.070270, 0, 0} }
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
resinfo_indexable(texture2d)(float,float,float,float)_uint r0.x, l(0), t0.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
mul r1.xyzw, r1.xyzw, l(0.227027, 0.227027, 0.227027, 0.227027)
utof r0.x, r0.x
mov r2.y, l(0)
mov r3.xyzw, r1.xyzw
mov r0.y, l(1)
loop 
  ige r0.z, r0.y, l(3)
  breakc_nz r0.z
  div r2.x, icb[r0.y + 0].x, r0.x
  add r0.zw, r2.xxxy, v1.xxxy
  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.zwzz, t0.xyzw, s0
  mad r4.xyzw, r4.xyzw, icb[r0.y + 0].yyyy, r3.xyzw
  add r0.zw, -r2.xxxy, v1.xxxy
  sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r0.zwzz, t0.xyzw, s0
  mad r3.xyzw, r5.xyzw, icb[r0.y + 0].yyyy, r4.xyzw
  iadd r0.y, r0.y, l(1)
endloop 
mov o0.xyzw, r3.xyzw
ret 
// Approximately 21 instruction slots used
