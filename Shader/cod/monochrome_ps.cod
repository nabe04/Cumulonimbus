//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuse_sampler                   sampler      NA          NA             s0      1 
// diffuse_texture                   texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- texcoord.x; v1.y <- texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 10 "D:\Desktop\Cumulonimbus\Shader\monochrome_ps.hlsl"
mov r0.x, l(0.298912)  // r0.x <- monochrome_scale.x

#line 11
mov r0.y, l(0.586611)  // r0.y <- monochrome_scale.y

#line 12
mov r0.z, l(0.114478)  // r0.z <- monochrome_scale.z

#line 13
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- fragment_color.x; r1.y <- fragment_color.y; r1.z <- fragment_color.z

#line 15
dp3 r0.z, r1.xyzx, r0.xyzx
mov r0.xyz, r0.zzzz  // r0.x <- gray_color.x; r0.y <- gray_color.y; r0.z <- gray_color.z

#line 17
itof o0.w, l(1)
mov o0.xyz, r0.xyzx
ret 
// Approximately 10 instruction slots used
