//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer LightCB
// {
//
//   float3 light_position;             // Offset:    0 Size:    12 [unused]
//   float orthographic_view_width;     // Offset:   12 Size:     4 [unused]
//   float3 light_direction;            // Offset:   16 Size:    12 [unused]
//   float orthographic_view_height;    // Offset:   28 Size:     4 [unused]
//   float3 light_color;                // Offset:   32 Size:    12 [unused]
//   float orthographic_near_z;         // Offset:   44 Size:     4 [unused]
//   float orthographic_far_z;          // Offset:   48 Size:     4 [unused]
//   float3 light_padding;              // Offset:   52 Size:    12 [unused]
//   float4x4 light_view_matrix;        // Offset:   64 Size:    64
//   float4x4 light_perspective_projection_matrix;// Offset:  128 Size:    64 [unused]
//   float4x4 light_perspective_view_projection_matrix;// Offset:  192 Size:    64 [unused]
//   float4x4 light_orthographic_projection_matrix;// Offset:  256 Size:    64 [unused]
//   float4x4 light_orthographic_view_projection_matrix;// Offset:  320 Size:    64
//
// }
//
// cbuffer TransformCB
// {
//
//   float4x4 bone_transforms[128];     // Offset:    0 Size:  8192
//   float4x4 transform_matrix;         // Offset: 8192 Size:    64 [unused]
//   float4x4 scaling_matrix;           // Offset: 8256 Size:    64 [unused]
//   float4x4 rotation_matrix;          // Offset: 8320 Size:    64 [unused]
//   float4x4 translation_matrix;       // Offset: 8384 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LightCB                           cbuffer      NA          NA            cb2      1 
// TransformCB                       cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
// WEIGHTS                  0   xyzw        3     NONE   float   xyzw
// BONES                    0   xyzw        4     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// WV_POSITION              0   xyzw        1     NONE   float   xyzw
// WVP_POSITION             0   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB2[24], immediateIndexed
dcl_constantbuffer CB3[512], dynamicIndexed
dcl_input v0.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 3
ishl r0.xyzw, v4.xyzw, l(2, 2, 2, 2)
mul r1.xyz, v0.yyyy, cb3[r0.y + 1].xyzx
mad r1.xyz, cb3[r0.y + 0].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb3[r0.y + 2].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb3[r0.y + 3].xyzx, v0.wwww, r1.xyzx
mul r1.xyz, r1.xyzx, v3.yyyy
mul r2.xyz, v0.yyyy, cb3[r0.x + 1].xyzx
mad r2.xyz, cb3[r0.x + 0].xyzx, v0.xxxx, r2.xyzx
mad r2.xyz, cb3[r0.x + 2].xyzx, v0.zzzz, r2.xyzx
mad r2.xyz, cb3[r0.x + 3].xyzx, v0.wwww, r2.xyzx
mad r1.xyz, v3.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb3[r0.z + 1].xyzx
mad r2.xyz, cb3[r0.z + 0].xyzx, v0.xxxx, r2.xyzx
mad r2.xyz, cb3[r0.z + 2].xyzx, v0.zzzz, r2.xyzx
mad r0.xyz, cb3[r0.z + 3].xyzx, v0.wwww, r2.xyzx
mad r0.xyz, v3.zzzz, r0.xyzx, r1.xyzx
mul r1.xyz, v0.yyyy, cb3[r0.w + 1].xyzx
mad r1.xyz, cb3[r0.w + 0].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb3[r0.w + 2].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb3[r0.w + 3].xyzx, v0.wwww, r1.xyzx
mad r0.xyz, v3.wwww, r1.xyzx, r0.xyzx
mul r1.xyzw, r0.yyyy, cb2[21].xyzw
mad r1.xyzw, cb2[20].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[22].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[23].xyzw
mov o0.xyzw, r1.xyzw
mov o2.xyzw, r1.xyzw
mul r1.xyzw, r0.yyyy, cb2[5].xyzw
mad r1.xyzw, cb2[4].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb2[6].xyzw, r0.zzzz, r1.xyzw
add o1.xyzw, r0.xyzw, cb2[7].xyzw
ret 
// Approximately 32 instruction slots used
