//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBTranslation
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   row_major float4x4 boneTransforms[128];// Offset:   64 Size:  8192
//   row_major float4x4 transform_matrix;// Offset: 8256 Size:    64 [unused]
//
// }
//
// cbuffer CBMesh
// {
//
//   float4 m_Color;                    // Offset:    0 Size:    16
//   float4 m_Ka;                       // Offset:   16 Size:    16 [unused]
//   float4 m_Kd;                       // Offset:   32 Size:    16 [unused]
//   float4 m_Ks;                       // Offset:   48 Size:    16 [unused]
//
// }
//
// cbuffer CBLight
// {
//
//   float4 lightDirection;             // Offset:    0 Size:    16 [unused]
//   float4 lightColor;                 // Offset:   16 Size:    16 [unused]
//   float4 ambient;                    // Offset:   32 Size:    16 [unused]
//   float4 eyePosition;                // Offset:   48 Size:    16
//   float4 light_position;             // Offset:   64 Size:    16 [unused]
//   row_major float4x4 light_view_projection;// Offset:   80 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBTranslation                     cbuffer      NA          NA            cb0      1 
// CBMesh                            cbuffer      NA          NA            cb1      1 
// CBLight                           cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// WEIGHTS                  0   xyzw        3     NONE   float   xyzw
// BONES                    0   xyzw        4     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
// EYE_VECTOR               0   xyz         4     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[516], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xy
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_temps 3
ishl r0.xyzw, v4.xyzw, l(2, 2, 2, 2)
mul r1.xyz, v0.yyyy, cb0[r0.y + 5].xyzx
mad r1.xyz, v0.xxxx, cb0[r0.y + 4].xyzx, r1.xyzx
mad r1.xyz, v0.zzzz, cb0[r0.y + 6].xyzx, r1.xyzx
mad r1.xyz, v0.wwww, cb0[r0.y + 7].xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, v3.yyyy
mul r2.xyz, v0.yyyy, cb0[r0.x + 5].xyzx
mad r2.xyz, v0.xxxx, cb0[r0.x + 4].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb0[r0.x + 6].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb0[r0.x + 7].xyzx, r2.xyzx
mad r1.xyz, v3.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb0[r0.z + 5].xyzx
mad r2.xyz, v0.xxxx, cb0[r0.z + 4].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb0[r0.z + 6].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb0[r0.z + 7].xyzx, r2.xyzx
mad r1.xyz, v3.zzzz, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb0[r0.w + 5].xyzx
mad r2.xyz, v0.xxxx, cb0[r0.w + 4].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb0[r0.w + 6].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb0[r0.w + 7].xyzx, r2.xyzx
mad r1.xyz, v3.wwww, r2.xyzx, r1.xyzx
mul r2.xyzw, r1.yyyy, cb0[1].xyzw
mad r2.xyzw, r1.xxxx, cb0[0].xyzw, r2.xyzw
mad r1.xyzw, r1.zzzz, cb0[2].xyzw, r2.xyzw
add r1.xyzw, r1.xyzw, cb0[3].xyzw
mov o0.xyzw, r1.xyzw
add o4.xyz, -r1.xyzx, cb2[3].xyzx
mul r1.xyz, v1.yyyy, cb0[r0.y + 5].xyzx
mad r1.xyz, v1.xxxx, cb0[r0.y + 4].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb0[r0.y + 6].xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, v3.yyyy
mul r2.xyz, v1.yyyy, cb0[r0.x + 5].xyzx
mad r2.xyz, v1.xxxx, cb0[r0.x + 4].xyzx, r2.xyzx
mad r2.xyz, v1.zzzz, cb0[r0.x + 6].xyzx, r2.xyzx
mad r1.xyz, v3.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v1.yyyy, cb0[r0.z + 5].xyzx
mad r2.xyz, v1.xxxx, cb0[r0.z + 4].xyzx, r2.xyzx
mad r0.xyz, v1.zzzz, cb0[r0.z + 6].xyzx, r2.xyzx
mad r0.xyz, v3.zzzz, r0.xyzx, r1.xyzx
mul r1.xyz, v1.yyyy, cb0[r0.w + 5].xyzx
mad r1.xyz, v1.xxxx, cb0[r0.w + 4].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb0[r0.w + 6].xyzx, r1.xyzx
mad r0.xyz, v3.wwww, r1.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o1.xyz, r0.wwww, r0.xyzx
mov o2.xy, v2.xyxx
mov o3.xyzw, cb1[0].xyzw
ret 
// Approximately 49 instruction slots used
