//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CameraCB
// {
//
//   float4x4 camera_view_matrix;       // Offset:    0 Size:    64 [unused]
//   float4x4 camera_projection_matrix; // Offset:   64 Size:    64 [unused]
//   float4x4 camera_view_projection_matrix;// Offset:  128 Size:    64 [unused]
//   float3 camera_position;            // Offset:  192 Size:    12
//   float camera_distance_from_origin; // Offset:  204 Size:     4 [unused]
//   float3 camera_at;                  // Offset:  208 Size:    12 [unused]
//   float camera_near_z;               // Offset:  220 Size:     4 [unused]
//   float3 camera_up;                  // Offset:  224 Size:    12 [unused]
//   float camera_far_z;                // Offset:  236 Size:     4 [unused]
//   float3 camera_right;               // Offset:  240 Size:    12 [unused]
//   float camera_fov;                  // Offset:  252 Size:     4 [unused]
//   float3 camera_front;               // Offset:  256 Size:    12 [unused]
//   float camera_aspect;               // Offset:  268 Size:     4 [unused]
//   float camera_width;                // Offset:  272 Size:     4 [unused]
//   float camera_height;               // Offset:  276 Size:     4 [unused]
//   float2 camera_padding;             // Offset:  280 Size:     8 [unused]
//
// }
//
// cbuffer LightCB
// {
//
//   float3 light_position;             // Offset:    0 Size:    12 [unused]
//   float orthographic_view_width;     // Offset:   12 Size:     4 [unused]
//   float3 light_direction;            // Offset:   16 Size:    12
//   float orthographic_view_height;    // Offset:   28 Size:     4 [unused]
//   float3 light_color;                // Offset:   32 Size:    12
//   float orthographic_near_z;         // Offset:   44 Size:     4 [unused]
//   float orthographic_far_z;          // Offset:   48 Size:     4 [unused]
//   float3 light_padding;              // Offset:   52 Size:    12 [unused]
//   float4x4 light_view_matrix;        // Offset:   64 Size:    64 [unused]
//   float4x4 light_perspective_projection_matrix;// Offset:  128 Size:    64 [unused]
//   float4x4 light_perspective_view_projection_matrix;// Offset:  192 Size:    64 [unused]
//   float4x4 light_orthographic_projection_matrix;// Offset:  256 Size:    64 [unused]
//   float4x4 light_orthographic_view_projection_matrix;// Offset:  320 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// defaultSampler                    sampler      NA          NA             s0      1 
// texture_base_color                texture  float4          2d            t20      1 
// texture_normal                    texture  float4          2d            t21      1 
// texture_position                  texture  float4          2d            t30      1 
// CameraCB                          cbuffer      NA          NA            cb1      1 
// LightCB                           cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[13], immediateIndexed
dcl_constantbuffer CB2[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t30
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord0.x; v1.y <- pin.texcoord0.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 12 "D:\Desktop\Cumulonimbus\Shader\gbuffer_lighting_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t20.xyzw, s0  // r0.x <- albedo_color.x; r0.y <- albedo_color.y; r0.z <- albedo_color.z; r0.w <- albedo_color.w

#line 13
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t21.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- normal_map.x; r1.y <- normal_map.y; r1.z <- normal_map.z

#line 14
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t30.xyzw, s0
mov r2.xyz, r2.xyzx  // r2.x <- position_map.x; r2.y <- position_map.y; r2.z <- position_map.z

#line 18
mov r3.xyz, -cb1[12].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- eye_vec.x; r2.y <- eye_vec.y; r2.z <- eye_vec.z

#line 20
dp3 r1.w, cb2[1].xyzx, cb2[1].xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, cb2[1].xyzx  // r3.x <- light_vec.x; r3.y <- light_vec.y; r3.z <- light_vec.z

#line 22
nop 
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r4.xyz, cb2[2].xyzx
mov r5.xyz, l(1.000000,1.000000,1.000000,0)

#line 14 "D:\Desktop\Cumulonimbus\Shader\functions_lighting.hlsli"
mov r6.xyz, -r3.xyzx
dp3 r1.w, r1.xyzx, r6.xyzx  // r1.w <- D

#line 15
itof r2.w, l(0)
max r1.w, r1.w, r2.w

#line 16
mul r4.xyz, r4.xyzx, r5.xyzx
mul r4.xyz, r1.wwww, r4.xyzx  // r4.x <- <Diffuse return value>.x; r4.y <- <Diffuse return value>.y; r4.z <- <Diffuse return value>.z

#line 22 "D:\Desktop\Cumulonimbus\Shader\gbuffer_lighting_ps.hlsl"
mov r4.xyz, r4.xyzx  // r4.x <- diffuse.x; r4.y <- diffuse.y; r4.z <- diffuse.z

#line 24
nop 
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r5.xyz, cb2[2].xyzx
mov r2.xyz, r2.xyzx
mov r6.xyz, l(1.000000,1.000000,1.000000,0)

#line 33 "D:\Desktop\Cumulonimbus\Shader\functions_lighting.hlsli"
mov r3.xyz, -r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- H.x; r2.y <- H.y; r2.z <- H.z

#line 35
dp3 r1.z, r2.xyzx, r1.xyzx
mov r1.xyz, r1.zzzz  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 36
itof r2.xyz, l(0, 0, 0, 0)
max r1.xyz, r1.xyzx, r2.xyzx

#line 37
mov r2.xyz, l(1.000000,1.000000,1.000000,0)
mul r2.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 38
mul r1.xyz, r6.xyzx, r1.xyzx
mul r1.xyz, r5.xyzx, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 39
mov r1.xyz, r1.xyzx  // r1.x <- <BlinnPhongSpecular return value>.x; r1.y <- <BlinnPhongSpecular return value>.y; r1.z <- <BlinnPhongSpecular return value>.z

#line 24 "D:\Desktop\Cumulonimbus\Shader\gbuffer_lighting_ps.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- phong_specular.x; r1.y <- phong_specular.y; r1.z <- phong_specular.z

#line 28
add r1.xyz, r1.xyzx, r4.xyzx
add r1.xyz, r1.xyzx, cb2[2].xyzx
mov r1.w, l(1.000000)
mul r0.xyzw, r0.xyzw, r1.xyzw

#line 30
mov o0.xyzw, r0.xyzw
ret 
// Approximately 55 instruction slots used
